{"version":3,"sources":["reducers/index.js","components/ErrorBoundary.jsx","domain/Geocoder.js","utils/Rakuten/Travel.js","utils/Rakuten.js","domain/HotelRepository.js","actions/index.jsx","containers/SearchForm.jsx","components/GeocodeResult.jsx","components/Map.jsx","components/HotelRow.jsx","components/HotelsClickableTh.jsx","components/HotelsTable.jsx","components/SearchPage.jsx","components/About.jsx","components/App.jsx","utils/serviceWorker.js","index.js"],"names":["global","redux__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","query_string__WEBPACK_IMPORTED_MODULE_1__","query_string__WEBPACK_IMPORTED_MODULE_1___default","n","combineReducers","place","state","arguments","length","undefined","queryString","parse","location","search","getPlaceParam","action","type","geocodeResult","address","lat","lng","message","hotels","sortKey","ErrorBoundary","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","hasError","error","info","setState","react_default","a","createElement","children","React","Component","require","config","SIMPLE_HOTEL_SEARCH_ENDPOINT","concat","Rakuten","simpleHotelSearch","params","axios","get","setErrorMessage","dispatch","startSearch","getState","key","process","then","results","data","status","result","formatted_address","geometry","_ref","applicationId","datumType","latitude","longitude","map","hotel","basicInfo","hotelBasicInfo","distance","geolib","getDistance","id","hotelNo","name","hotelName","url","hotelInformationUrl","thumbUrl","hotelThumbnailUrl","price","hotelMinCharge","reviewAverage","reviewCount","searchHotelByLocation","setHotels","catch","connect","setPlace","className","onSubmit","e","preventDefault","history","push","size","value","onChange","target","GeocodeResult","defaultProps","InnerMap","withGoogleMap","marker","lib","defaultZoom","defaultCenter","center","Map","_ref2","react_google_maps_loader_es","libraries","render","googleMaps","containerElement","mapElement","position","HotelRow","src","alt","href","ownProps","isSelected","setSortKey","onClick","label","HotelsTable","components_HotelsClickableTh","components_HotelRow","_","sortBy","h","SearchPage","containers_SearchForm","components_ErrorBoundary","components_Map","components_GeocodeResult","components_HotelsTable","AboutPage","App","BrowserRouter","Link","to","Switch","Route","exact","path","component","Boolean","window","hostname","match","store","createStore","reducer","composeWithDevTools","applyMiddleware","thunk","ReactDOM","es","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.59cbb23c.chunk.js","sourcesContent":["import { combineReducers } from \"redux\";\r\nimport queryString from \"query-string\";\r\n\r\nconst getPlaceParam = () => {\r\n  const params = queryString.parse(global.location.search);\r\n  const place = params.place;\r\n  if (place && place.length > 0) {\r\n    return place;\r\n  }\r\n  return null;\r\n};\r\n\r\nconst place = (state = getPlaceParam() || \"東京タワー\", action) => {\r\n  switch (action.type) {\r\n    case \"CHANGE_PLACE\":\r\n      return action.place;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst geocodeResult = (\r\n  state = {\r\n    address: \"\",\r\n    location: {\r\n      lat: 35.6585805,\r\n      lng: 139.7454329\r\n    }\r\n  },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case \"GEOCODE_FETCHED\":\r\n      return {\r\n        address: action.address,\r\n        location: action.location\r\n      };\r\n    case \"CHANGE_ERROR_MESSAGE\":\r\n      return {\r\n        address: action.message,\r\n        location: { lat: 0, lng: 0 }\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst hotels = (state = [], action) => {\r\n  switch (action.type) {\r\n    case \"CHANGE_HOTELS\":\r\n      return action.hotels;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst sortKey = (state = \"price\", action) => {\r\n  switch (action.type) {\r\n    case \"CHANGE_SORT_KEY\":\r\n      return action.sortKey;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default combineReducers({ place, geocodeResult, hotels, sortKey });\r\n","import React from \"react\";\n\nclass ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  componentDidCatch(error, info) {\n    // Display fallback UI\n    this.setState({ hasError: true });\n  }\n\n  render() {\n    if (this.state.hasError) {\n      // You can render any custom fallback UI\n      return <h1>Something went wrong.</h1>;\n    }\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundary;\n","import axios from \"axios\";\r\nrequire(\"dotenv\").config();\r\n\r\nconst GEOCODE_ENDPOINT = \"https://maps.googleapis.com/maps/api/geocode/json\";\r\n\r\nexport const geocode = place =>\r\n  axios\r\n    .get(GEOCODE_ENDPOINT, {\r\n      params: {\r\n        key: process.env.REACT_APP_GOOGLEMAP_API_KEY,\r\n        address: place\r\n      }\r\n    })\r\n    .then(results => {\r\n      const data = results.data;\r\n      const status = data.status;\r\n      const result = data.results[0];\r\n      if (typeof result === \"undefined\") {\r\n        return { status };\r\n      }\r\n      const address = result.formatted_address;\r\n      const location = result.geometry.location;\r\n      return { status, address, location };\r\n    });\r\n","import axios from \"axios\";\r\n\r\nconst URL_BASE = \"https://app.rakuten.co.jp/services/api/Travel/\";\r\nconst SIMPLE_HOTEL_SEARCH_ENDPOINT = `${URL_BASE}/SimpleHotelSearch/20170426`;\r\nexport default {\r\n  simpleHotelSearch: params =>\r\n    axios.get(SIMPLE_HOTEL_SEARCH_ENDPOINT, { params })\r\n};\r\n","import Travel from \"./Rakuten/Travel\";\r\n\r\nexport default { Travel };\r\n","import geolib from \"geolib\";\r\n\r\nimport Rakuten from \"../utils/Rakuten\";\r\nrequire(\"dotenv\").config();\r\n\r\nexport const searchHotelByLocation = location => {\r\n  const params = {\r\n    applicationId: process.env.REACT_APP_RAKUTEN_APP_ID,\r\n    datumType: 1,\r\n    latitude: location.lat,\r\n    longitude: location.lng\r\n  };\r\n  return Rakuten.Travel.simpleHotelSearch(params).then(result =>\r\n    result.data.hotels.map(hotel => {\r\n      const basicInfo = hotel.hotel[0].hotelBasicInfo;\r\n      const distance = geolib.getDistance(\r\n        { latitude: location.lat, longitude: location.lng },\r\n        { latitude: basicInfo.latitude, longitude: basicInfo.longitude }\r\n      );\r\n\r\n      return {\r\n        id: basicInfo.hotelNo,\r\n        name: basicInfo.hotelName,\r\n        url: basicInfo.hotelInformationUrl,\r\n        thumbUrl: basicInfo.hotelThumbnailUrl,\r\n        price: basicInfo.hotelMinCharge,\r\n        reviewAverage: basicInfo.reviewAverage,\r\n        reviewCount: basicInfo.reviewCount,\r\n        distance\r\n      };\r\n    })\r\n  );\r\n};\r\n","import { geocode } from \"../domain/Geocoder\";\r\nimport { searchHotelByLocation } from \"../domain/HotelRepository\";\r\n\r\nexport const setPlace = place => dispatch =>\r\n  dispatch({\r\n    type: \"CHANGE_PLACE\",\r\n    place\r\n  });\r\nexport const setErrorMessage = message => dispatch =>\r\n  dispatch({\r\n    type: \"CHANGE_ERROR_MESSAGE\",\r\n    message\r\n  });\r\nexport const setHotels = hotels => dispatch =>\r\n  dispatch({\r\n    type: \"CHANGE_HOTELS\",\r\n    hotels\r\n  });\r\nexport const setSortKey = sortKey => dispatch =>\r\n  dispatch({\r\n    type: \"CHANGE_SORT_KEY\",\r\n    sortKey\r\n  });\r\nexport const startSearch = () => (dispatch, getState) => {\r\n  geocode(getState().place)\r\n    .then(({ status, address, location }) => {\r\n      switch (status) {\r\n        case \"OK\": {\r\n          dispatch({ type: \"GEOCODE_FETCHED\", address, location });\r\n          return searchHotelByLocation(location);\r\n        }\r\n        case \"ZERO_RESULTS\": {\r\n          dispatch(setErrorMessage(\"結果が見つかりませんでした\"));\r\n          break;\r\n        }\r\n        default: {\r\n          dispatch(setErrorMessage(\"エラーが発生しました\"));\r\n        }\r\n      }\r\n      return [];\r\n    })\r\n    .then(hotels => {\r\n      dispatch(setHotels(hotels));\r\n    })\r\n    .catch(() => {\r\n      dispatch(setErrorMessage(\"エラーが発生しました\"));\r\n    });\r\n};\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { setPlace, startSearch } from \"../actions\";\r\n\r\nconst SearchForm = props => (\r\n  <form\r\n    className=\"SearchForm\"\r\n    onSubmit={e => {\r\n      e.preventDefault();\r\n      props.history.push(`/?place=${props.place}`);\r\n      props.startSearch(props.place);\r\n    }}\r\n  >\r\n    <input\r\n      className=\"SearchForm-input\"\r\n      type=\"text\"\r\n      size=\"30\"\r\n      value={props.place}\r\n      onChange={e => {\r\n        e.preventDefault();\r\n        props.setPlace(e.target.value);\r\n      }}\r\n    />\r\n    <input className=\"SearchForm-submit\" type=\"submit\" value=\"検索\" />\r\n  </form>\r\n);\r\n\r\nSearchForm.propTypes = {\r\n  history: PropTypes.shape({ push: PropTypes.func }).isRequired,\r\n  place: PropTypes.string.isRequired,\r\n  setPlace: PropTypes.func.isRequired,\r\n  startSearch: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(\r\n  state => ({\r\n    place: state.place\r\n  }),\r\n  { setPlace, startSearch }\r\n)(SearchForm);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst GeocodeResult = ({ address, location }) => (\r\n  <ul className=\"geocode-result\">\r\n    <li>\r\n      住所：\r\n      {address}\r\n    </li>\r\n    <li>\r\n      緯度：\r\n      {location.lat}\r\n    </li>\r\n    <li>\r\n      経度：\r\n      {location.lng}\r\n    </li>\r\n  </ul>\r\n);\r\n\r\nGeocodeResult.propTypes = {\r\n  address: PropTypes.string,\r\n  location: PropTypes.objectOf(PropTypes.number).isRequired\r\n};\r\n\r\nGeocodeResult.defaultProps = {\r\n  address: \"\"\r\n};\r\n\r\nexport default GeocodeResult;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport ReactGoogleMapLoader from \"react-google-maps-loader\";\r\nimport { withGoogleMap, GoogleMap, Marker } from \"react-google-maps\";\r\nrequire(\"dotenv\").config();\r\n\r\nconst InnerMap = withGoogleMap(({ location, marker }) => (\r\n  <GoogleMap defaultZoom={12} defaultCenter={location} center={location}>\r\n    <Marker {...marker} />\r\n  </GoogleMap>\r\n));\r\n\r\nconst Map = ({ location }) => (\r\n  <ReactGoogleMapLoader\r\n    params={{\r\n      key: process.env.REACT_APP_GOOGLEMAP_API_KEY,\r\n      libraries: \"places,geometry\"\r\n    }}\r\n    render={(googleMaps, error) =>\r\n      googleMaps ? (\r\n        <div>\r\n          <InnerMap\r\n            containerElement={<div />}\r\n            mapElement={<div className=\"map\" />}\r\n            location={location}\r\n            marker={{ position: location }}\r\n          />\r\n          {error ? error : \"Google Maps is loaded !\"}\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          {/*Check for network error so loading state ends if user lost connection.*/}\r\n          {error === \"Network Error\" ? <p>{error}</p> : <p>isLoading...</p>}\r\n        </div>\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nMap.propTypes = {\r\n  location: PropTypes.objectOf(PropTypes.number.isRequired)\r\n};\r\n\r\nexport default Map;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst HotelRow = ({ hotel }) => (\r\n  <tr>\r\n    <td>\r\n      <img src={hotel.thumbUrl} alt={hotel.name} />\r\n    </td>\r\n    <td>\r\n      <a href={hotel.url}>{hotel.name}</a>\r\n    </td>\r\n    <td>{hotel.price ? `${hotel.price}円` : \"空室なし\"}</td>\r\n    <td>{hotel.reviewAverage}</td>\r\n    <td>{hotel.reviewCount}</td>\r\n    <td>{hotel.distance}</td>\r\n  </tr>\r\n);\r\n\r\nHotelRow.propTypes = {\r\n  hotel: PropTypes.shape({\r\n    name: PropTypes.string,\r\n    url: PropTypes.string,\r\n    thumbUrl: PropTypes.string,\r\n    place: PropTypes.number,\r\n    reviewAverage: PropTypes.number,\r\n    reviewCount: PropTypes.number,\r\n    distance: PropTypes.number\r\n  }).isRequired\r\n};\r\n\r\nexport default HotelRow;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { setSortKey } from \"../actions\";\r\n\r\nconst HotelsClickableTh = props => (\r\n  <th\r\n    className=\"HotelsClickableTh\"\r\n    onClick={() => props.setSortKey(props.sortKey)}\r\n  >\r\n    {props.label}\r\n    {props.isSelected ? \"▲\" : \"\"}\r\n  </th>\r\n);\r\n\r\nHotelsClickableTh.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  sortKey: PropTypes.string.isRequired,\r\n  isSelected: PropTypes.bool.isRequired,\r\n  setSortKey: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(\r\n  (state, ownProps) => ({\r\n    isSelected: ownProps.sortKey === state.sortKey\r\n  }),\r\n  { setSortKey }\r\n)(HotelsClickableTh);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport _ from \"lodash\";\r\nimport HotelRow from \"./HotelRow\";\r\nimport HotelsClickableTh from \"./HotelsClickableTh\";\r\n\r\nconst HotelsTable = ({ hotels }) => (\r\n  <table>\r\n    <tbody>\r\n      <tr>\r\n        <th>画像</th>\r\n        <th>ホテル名</th>\r\n        <HotelsClickableTh label={\"値段\"} sortKey={\"price\"} />\r\n        <HotelsClickableTh label={\"レビュー\"} sortKey={\"reviewAverage\"} />\r\n        <HotelsClickableTh label={\"レビュー件数\"} sortKey={\"reviewCount\"} />\r\n        <HotelsClickableTh label={\"距離\"} sortKey={\"distance\"} />\r\n      </tr>\r\n      {hotels.map(hotel => (\r\n        <HotelRow key={hotel.id} hotel={hotel} />\r\n      ))}\r\n    </tbody>\r\n  </table>\r\n);\r\n\r\nHotelsTable.propTypes = {\r\n  hotels: PropTypes.arrayOf(PropTypes.any)\r\n};\r\n\r\nHotelsTable.defaultProps = {\r\n  hotels: []\r\n};\r\n\r\nconst sortedHotels = (hotels, sortKey) => _.sortBy(hotels, h => h[sortKey]);\r\n\r\nexport default connect(state => ({\r\n  hotels: sortedHotels(state.hotels, state.sortKey)\r\n}))(HotelsTable);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport ErrorBoundary from \"../components/ErrorBoundary\";\r\n\r\nimport SearchForm from \"../containers/SearchForm\";\r\nimport GeocodeResult from \"./GeocodeResult\";\r\nimport Map from \"./Map\";\r\nimport HotelsTable from \"./HotelsTable\";\r\nimport { startSearch } from \"../actions\";\r\n\r\nclass SearchPage extends Component {\r\n  componentDidMount() {\r\n    this.props.dispatch(startSearch());\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"SearchPage\">\r\n        <h1 className=\"SearchPage-title\">ホテル検索</h1>\r\n        <SearchForm history={this.props.history} />\r\n        <div className=\"SearchPage-result-left\">\r\n          <ErrorBoundary>\r\n            <Map location={this.props.geocodeResult.location} />\r\n          </ErrorBoundary>\r\n          <div className=\"SearchPage-result-right\">\r\n            <GeocodeResult\r\n              address={this.props.geocodeResult.address}\r\n              location={this.props.geocodeResult.location}\r\n            />\r\n            <h2>ホテル検索結果</h2>\r\n            <HotelsTable />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nSearchPage.propTypes = {\r\n  history: PropTypes.shape({ push: PropTypes.func }).isRequired,\r\n  location: PropTypes.shape({ search: PropTypes.string }).isRequired,\r\n  geocodeResult: PropTypes.shape({\r\n    address: PropTypes.string.isRequired,\r\n    location: PropTypes.shape({\r\n      lat: PropTypes.number.isRequired,\r\n      lng: PropTypes.number.isRequired\r\n    }).isRequired\r\n  }).isRequired,\r\n  dispatch: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  geocodeResult: state.geocodeResult\r\n});\r\n\r\nexport default connect(mapStateToProps)(SearchPage);\r\n","import React from \"react\";\r\n\r\nconst AboutPage = () => (\r\n  <div className=\"about\">\r\n    <h1 className=\"App-title\">このサイトについて</h1>\r\n  </div>\r\n);\r\n\r\nexport default AboutPage;\r\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Link, Switch } from \"react-router-dom\";\n\nimport SearchPage from \"./SearchPage\";\nimport AboutPage from \"./About\";\n\nconst App = () => (\n  <Router>\n    <div className=\"App\">\n      <ul className=\"App-left-navi\">\n        <li>\n          <Link to=\"/\">ホテル検索</Link>\n        </li>\n        <li>\n          <Link to=\"/about\">About</Link>\n        </li>\n      </ul>\n      <Switch>\n        <Route exact path=\"/\" component={SearchPage} />\n        <Route exact path=\"/about\" component={AboutPage} />\n      </Switch>\n    </div>\n  </Router>\n);\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\nimport App from \"./components/App\";\nimport reducer from \"./reducers/\";\n\nimport * as serviceWorker from \"./utils/serviceWorker\";\n\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(thunk)));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\nserviceWorker.unregister();\n"],"sourceRoot":""}