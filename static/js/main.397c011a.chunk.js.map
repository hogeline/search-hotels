{"version":3,"sources":["reducers/index.js","components/Header.jsx","components/ErrorBoundary.jsx","domain/Geocoder.js","utils/Rakuten/Travel.js","utils/Rakuten.js","domain/HotelRepository.js","actions/index.jsx","containers/SearchForm.jsx","components/GeocodeResult.jsx","components/Map.jsx","components/HotelRow.jsx","components/HotelsClickableTh.jsx","components/Loading.jsx","components/HotelsTable.jsx","components/SearchPage.jsx","components/About.jsx","components/App.jsx","utils/serviceWorker.js","index.js"],"names":["global","redux__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","query_string__WEBPACK_IMPORTED_MODULE_1__","query_string__WEBPACK_IMPORTED_MODULE_1___default","n","combineReducers","place","state","arguments","length","undefined","queryString","parse","location","search","getPlaceParam","action","type","geocodeResult","address","lat","lng","message","hotels","loadHotels","isLoading","sortKey","Head","react_default","a","createElement","className","href","ErrorBoundary","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","hasError","error","info","setState","children","React","Component","require","config","SIMPLE_HOTEL_SEARCH_ENDPOINT","concat","Rakuten","simpleHotelSearch","params","axios","get","setErrorMessage","dispatch","setLoading","startSearch","getState","key","process","then","results","data","status","result","formatted_address","geometry","_ref","format","applicationId","datumType","latitude","longitude","map","hotel","basicInfo","hotelBasicInfo","distance","geolib","getDistance","id","hotelNo","name","hotelName","url","hotelInformationUrl","thumbUrl","hotelThumbnailUrl","price","hotelMinCharge","reviewAverage","reviewCount","searchHotelByLocation","setHotels","catch","connect","setPlace","onSubmit","e","preventDefault","history","push","MuiThemeProvider_default","class","DatePicker_default","hintText","mode","size","value","onChange","target","GeocodeResult","defaultProps","InnerMap","withGoogleMap","marker","lib","defaultZoom","defaultCenter","center","Map","_ref2","react_google_maps_loader_es","libraries","render","googleMaps","containerElement","mapElement","position","console","log","HotelRow","src","alt","ownProps","isSelected","setSortKey","onClick","label","Loading","react_loading_default","color","HotelsTable","components_HotelsClickableTh","components_Loading","components_HotelRow","_","sortBy","h","SearchPage","containers_SearchForm","components_GeocodeResult","components_ErrorBoundary","components_Map","components_HotelsTable","AboutPage","App","BrowserRouter","Header","Switch","Route","exact","path","component","Boolean","window","hostname","match","store","createStore","reducer","composeWithDevTools","applyMiddleware","thunk","ReactDOM","es","components_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.397c011a.chunk.js","sourcesContent":["import { combineReducers } from \"redux\";\r\nimport queryString from \"query-string\";\r\n\r\nconst getPlaceParam = () => {\r\n  const params = queryString.parse(global.location.search);\r\n  const place = params.place;\r\n  if (place && place.length > 0) {\r\n    return place;\r\n  }\r\n  return null;\r\n};\r\n\r\nconst place = (state = getPlaceParam() || \"東京タワー\", action) => {\r\n  switch (action.type) {\r\n    case \"CHANGE_PLACE\":\r\n      return action.place;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst geocodeResult = (\r\n  state = {\r\n    address: \"\",\r\n    location: {\r\n      lat: 35.6585805,\r\n      lng: 139.7454329\r\n    }\r\n  },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case \"GEOCODE_FETCHED\":\r\n      return {\r\n        address: action.address,\r\n        location: action.location\r\n      };\r\n    case \"CHANGE_ERROR_MESSAGE\":\r\n      return {\r\n        address: action.message,\r\n        location: { lat: 0, lng: 0 }\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst hotels = (state = [], action) => {\r\n  switch (action.type) {\r\n    case \"CHANGE_HOTELS\":\r\n      return action.hotels;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst loadHotels = (state = false, action) => {\r\n  switch (action.type) {\r\n    case \"LOADING_HOTELS\":\r\n      return action.isLoading;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst sortKey = (state = \"price\", action) => {\r\n  switch (action.type) {\r\n    case \"CHANGE_SORT_KEY\":\r\n      return action.sortKey;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default combineReducers({\r\n  place,\r\n  geocodeResult,\r\n  hotels,\r\n  loadHotels,\r\n  sortKey\r\n});\r\n","import React from \"react\";\n\nconst Head = () => (\n  <header>\n    <div className=\"header-logo\">\n      <a href=\"/search-hotels\">学会周辺ホテル調べ</a>\n    </div>\n    <div className=\"header-menu\">\n      <nav className=\"header-menu-navi\">\n        <a href=\"/search-hotels\">ホテル検索</a>\n        <a href=\"/search-hotels/about\">About</a>\n      </nav>\n    </div>\n  </header>\n);\n\nexport default Head;","import React from \"react\";\n\nclass ErrorBoundary extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { hasError: false };\n  }\n\n  componentDidCatch(error, info) {\n    // Display fallback UI\n    this.setState({ hasError: true });\n  }\n\n  render() {\n    if (this.state.hasError) {\n      // You can render any custom fallback UI\n      return <h1>Something went wrong.</h1>;\n    }\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundary;\n","import axios from \"axios\";\r\nrequire(\"dotenv\").config();\r\n\r\nconst GEOCODE_ENDPOINT = \"https://maps.googleapis.com/maps/api/geocode/json\";\r\n\r\nexport const geocode = place =>\r\n  axios\r\n    .get(GEOCODE_ENDPOINT, {\r\n      params: {\r\n        key: process.env.REACT_APP_GOOGLEMAP_API_KEY,\r\n        address: place\r\n      }\r\n    })\r\n    .then(results => {\r\n      const data = results.data;\r\n      const status = data.status;\r\n      const result = data.results[0];\r\n      if (typeof result === \"undefined\") {\r\n        return { status };\r\n      }\r\n      const address = result.formatted_address;\r\n      const location = result.geometry.location;\r\n      return { status, address, location };\r\n    });\r\n","import axios from \"axios\";\r\n\r\nconst URL_BASE = \"https://app.rakuten.co.jp/services/api/Travel/\";\r\nconst SIMPLE_HOTEL_SEARCH_ENDPOINT = `${URL_BASE}SimpleHotelSearch/20170426`;\r\nexport default {\r\n  simpleHotelSearch: params =>\r\n    axios.get(SIMPLE_HOTEL_SEARCH_ENDPOINT, { params })\r\n};\r\n","import Travel from \"./Rakuten/Travel\";\r\n\r\nexport default { Travel };\r\n","import geolib from \"geolib\";\r\n\r\nimport Rakuten from \"../utils/Rakuten\";\r\nrequire(\"dotenv\").config();\r\n\r\nexport const searchHotelByLocation = location => {\r\n  const params = {\r\n    format: \"json\",\r\n    applicationId: process.env.REACT_APP_RAKUTEN_APP_ID,\r\n    datumType: 1,\r\n    latitude: location.lat,\r\n    longitude: location.lng\r\n  };\r\n  return Rakuten.Travel.simpleHotelSearch(params).then(result =>\r\n    result.data.hotels.map(hotel => {\r\n      const basicInfo = hotel.hotel[0].hotelBasicInfo;\r\n      const distance = geolib.getDistance(\r\n        { latitude: location.lat, longitude: location.lng },\r\n        { latitude: basicInfo.latitude, longitude: basicInfo.longitude }\r\n      );\r\n\r\n      return {\r\n        id: basicInfo.hotelNo,\r\n        name: basicInfo.hotelName,\r\n        url: basicInfo.hotelInformationUrl,\r\n        thumbUrl: basicInfo.hotelThumbnailUrl,\r\n        price: basicInfo.hotelMinCharge,\r\n        reviewAverage: basicInfo.reviewAverage,\r\n        reviewCount: basicInfo.reviewCount,\r\n        distance\r\n      };\r\n    })\r\n  );\r\n};","import { geocode } from \"../domain/Geocoder\";\r\nimport { searchHotelByLocation } from \"../domain/HotelRepository\";\r\n\r\nexport const setPlace = place => dispatch =>\r\n  dispatch({\r\n    type: \"CHANGE_PLACE\",\r\n    place\r\n  });\r\nexport const setErrorMessage = message => dispatch =>\r\n  dispatch({\r\n    type: \"CHANGE_ERROR_MESSAGE\",\r\n    message\r\n  });\r\nexport const setHotels = hotels => dispatch =>\r\n  dispatch({\r\n    type: \"CHANGE_HOTELS\",\r\n    hotels\r\n  });\r\nexport const setLoading = isLoading => dispatch =>\r\n  dispatch({\r\n    type: \"LOADING_HOTELS\",\r\n    isLoading\r\n  });\r\nexport const setSortKey = sortKey => dispatch =>\r\n  dispatch({\r\n    type: \"CHANGE_SORT_KEY\",\r\n    sortKey\r\n  });\r\nexport const startSearch = () => (dispatch, getState) => {\r\n  dispatch(setLoading(true));\r\n  geocode(getState().place)\r\n    .then(({ status, address, location }) => {\r\n      switch (status) {\r\n        case \"OK\": {\r\n          dispatch({ type: \"GEOCODE_FETCHED\", address, location });\r\n          return searchHotelByLocation(location);\r\n        }\r\n        case \"ZERO_RESULTS\": {\r\n          dispatch(setErrorMessage(\"結果が見つかりませんでした\"));\r\n          break;\r\n        }\r\n        default: {\r\n          dispatch(setErrorMessage(\"エラーが発生しました\"));\r\n        }\r\n      }\r\n      return [];\r\n    })\r\n    .then(hotels => {\r\n      dispatch(setLoading(false));\r\n      dispatch(setHotels(hotels));\r\n    })\r\n    .catch(() => {\r\n      dispatch(setErrorMessage(\"エラーが発生しました\"));\r\n    });\r\n};\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { setPlace, startSearch } from \"../actions\";\r\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider'\r\nimport DatePicker from 'material-ui/DatePicker';\r\n\r\nconst SearchForm = props => (\r\n  <form\r\n    className=\"SearchForm\"\r\n    onSubmit={e => {\r\n      e.preventDefault();\r\n      props.history.push(`?place=${props.place}`);\r\n      props.startSearch(props.place);\r\n    }}\r\n  >\r\n    <MuiThemeProvider>\r\n      宿泊日：<i class=\"fa fa-calendar-alt\" /><DatePicker hintText=\"Landscape Dialog\" mode=\"landscape\" className=\"calender\" />\r\n    </MuiThemeProvider>\r\n    <div className=\"\">\r\n      <input\r\n        className=\"SearchForm-input\"\r\n        type=\"text\"\r\n        size=\"30\"\r\n        value={props.place}\r\n        onChange={e => {\r\n          e.preventDefault();\r\n          props.setPlace(e.target.value);\r\n        }}\r\n      />\r\n      <input className=\"SearchForm-submit\" type=\"submit\" value=\"検索\" />\r\n    </div>\r\n  </form>\r\n);\r\n\r\nSearchForm.propTypes = {\r\n  history: PropTypes.shape({ push: PropTypes.func }).isRequired,\r\n  place: PropTypes.string.isRequired,\r\n  setPlace: PropTypes.func.isRequired,\r\n  startSearch: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(\r\n  state => ({\r\n    place: state.place\r\n  }),\r\n  { setPlace, startSearch }\r\n)(SearchForm);\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst GeocodeResult = ({ address, location }) => (\r\n  <ul className=\"geocode-result\">\r\n    <li>\r\n      住所：\r\n      {address}\r\n    </li>\r\n    <li>\r\n      緯度：\r\n      {location.lat}\r\n    </li>\r\n    <li>\r\n      経度：\r\n      {location.lng}\r\n    </li>\r\n  </ul>\r\n);\r\n\r\nGeocodeResult.propTypes = {\r\n  address: PropTypes.string,\r\n  location: PropTypes.objectOf(PropTypes.number).isRequired\r\n};\r\n\r\nGeocodeResult.defaultProps = {\r\n  address: \"\"\r\n};\r\n\r\nexport default GeocodeResult;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport ReactGoogleMapLoader from \"react-google-maps-loader\";\r\nimport { withGoogleMap, GoogleMap, Marker } from \"react-google-maps\";\r\nrequire(\"dotenv\").config();\r\n\r\nconst InnerMap = withGoogleMap(({ location, marker }) => (\r\n  <GoogleMap defaultZoom={12} defaultCenter={location} center={location}>\r\n    <Marker {...marker} />\r\n  </GoogleMap>\r\n));\r\n\r\nconst Map = ({ location }) => (\r\n  <ReactGoogleMapLoader\r\n    params={{\r\n      key: process.env.REACT_APP_GOOGLEMAP_API_KEY,\r\n      libraries: \"places,geometry\"\r\n    }}\r\n    render={(googleMaps, error) =>\r\n      googleMaps ? (\r\n        <div>\r\n          <InnerMap\r\n            containerElement={<div />}\r\n            mapElement={<div className=\"map\" />}\r\n            location={location}\r\n            marker={{ position: location }}\r\n          />\r\n          {error ? console.log(error) : \"\"}\r\n        </div>\r\n      ) : (\r\n          <div>\r\n            {error === \"Network Error\" ? <p>{error}</p> : <p>isLoading...</p>}\r\n          </div>\r\n        )\r\n    }\r\n  />\r\n);\r\n\r\nMap.propTypes = {\r\n  location: PropTypes.objectOf(PropTypes.number.isRequired)\r\n};\r\n\r\nexport default Map;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst HotelRow = ({ hotel }) => (\r\n  <div className=\"hotel card\">\r\n    <div className=\"hotel-icon\">\r\n      <div className=\"image-bg\">\r\n        <img src={hotel.thumbUrl} alt={hotel.name} />\r\n      </div>\r\n    </div>\r\n    <div className=\"hotel-info\">\r\n      <div className=\"hotel-name\">\r\n        <a href={hotel.url}>{hotel.name}</a>\r\n      </div>\r\n      <div className=\"hotel-price\">\r\n        {hotel.price ? `${hotel.price}円` : \"空室なし\"}\r\n      </div>\r\n      <div className=\"hotel-info-detail\">\r\n        <div className=\"detail hotel-star\">\r\n          <i className=\"far fa-star\" />{hotel.reviewAverage ? hotel.reviewAverage : \"なし\"}\r\n        </div>\r\n        <div className=\"detail hotel-review\">\r\n          <i className=\"far fa-comment\" />{hotel.reviewCount ? `${hotel.reviewCount}件` : \"0件\"}\r\n        </div>\r\n        <div className=\"detail hotel-distance\">\r\n          <i className=\"fa fa-road\" />{`${hotel.distance}m`}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nHotelRow.propTypes = {\r\n  hotel: PropTypes.shape({\r\n    name: PropTypes.string,\r\n    url: PropTypes.string,\r\n    thumbUrl: PropTypes.string,\r\n    place: PropTypes.number,\r\n    reviewAverage: PropTypes.number,\r\n    reviewCount: PropTypes.number,\r\n    distance: PropTypes.number\r\n  }).isRequired\r\n};\r\n\r\nexport default HotelRow;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { setSortKey } from \"../actions\";\r\n\r\nconst HotelsClickableTh = props => (\r\n  <div\r\n    className={props.isSelected ? \"sort-btn blue\" : \"sort-btn\"}\r\n    onClick={() => props.setSortKey(props.sortKey)}\r\n  >\r\n    {props.label}\r\n  </div >\r\n);\r\n\r\nHotelsClickableTh.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  sortKey: PropTypes.string.isRequired,\r\n  isSelected: PropTypes.bool.isRequired,\r\n  setSortKey: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(\r\n  (state, ownProps) => ({\r\n    isSelected: ownProps.sortKey === state.sortKey\r\n  }),\r\n  { setSortKey }\r\n)(HotelsClickableTh);\r\n","import React from \"react\";\r\nimport ReactLoading from \"react-loading\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Loading = ({ isLoading }) =>\r\n  isLoading ? <ReactLoading type={\"spokes\"} color={\"#0000ff\"} /> : null;\r\n\r\nLoading.propTypes = {\r\n  isLoading: PropTypes.bool.isRequired\r\n};\r\n\r\nexport default Loading;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport _ from \"lodash\";\r\nimport HotelRow from \"./HotelRow\";\r\nimport HotelsClickableTh from \"./HotelsClickableTh\";\r\nimport Loading from \"./Loading\";\r\n\r\nconst HotelsTable = ({ hotels, isLoading }) => (\r\n  <div className=\"hotels-table\">\r\n    <div className=\"hotels-table-navi\">\r\n      <HotelsClickableTh label={\"値段\"} sortKey={\"price\"} />\r\n      <HotelsClickableTh label={\"レビュー\"} sortKey={\"reviewAverage\"} />\r\n      <HotelsClickableTh label={\"レビュー件数\"} sortKey={\"reviewCount\"} />\r\n      <HotelsClickableTh label={\"距離\"} sortKey={\"distance\"} />\r\n    </div>\r\n    {isLoading ? <div className=\"Loading\"><Loading isLoading={isLoading} /></div> : hotels.map(hotel => (\r\n      <HotelRow key={hotel.id} hotel={hotel} />\r\n    ))}\r\n  </div>\r\n);\r\n\r\nHotelsTable.propTypes = {\r\n  hotels: PropTypes.arrayOf(PropTypes.any),\r\n  isLoading: PropTypes.bool.isRequired\r\n};\r\n\r\nHotelsTable.defaultProps = {\r\n  hotels: []\r\n};\r\n\r\nconst sortedHotels = (hotels, sortKey) => _.sortBy(hotels, h => h[sortKey]);\r\n\r\nexport default connect(state => ({\r\n  hotels: sortedHotels(state.hotels, state.sortKey),\r\n  isLoading: state.loadHotels\r\n}))(HotelsTable);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport ErrorBoundary from \"../components/ErrorBoundary\";\r\n\r\nimport SearchForm from \"../containers/SearchForm\";\r\nimport GeocodeResult from \"./GeocodeResult\";\r\nimport Map from \"./Map\";\r\nimport HotelsTable from \"./HotelsTable\";\r\nimport { startSearch } from \"../actions\";\r\n\r\nclass SearchPage extends Component {\r\n  componentDidMount() {\r\n    this.props.dispatch(startSearch());\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"SearchPage\">\r\n        <div className=\"container\">\r\n          <h1 className=\"SearchPage-title\">ホテル検索</h1>\r\n          <SearchForm history={this.props.history} />\r\n          <div className=\"SearchPage-geocode\">\r\n            <GeocodeResult\r\n              address={this.props.geocodeResult.address}\r\n              location={this.props.geocodeResult.location}\r\n            />\r\n          </div>\r\n          <div className=\"SearchPage-map\">\r\n            <ErrorBoundary>\r\n              <Map location={this.props.geocodeResult.location} />\r\n            </ErrorBoundary>\r\n          </div>\r\n          <h2>ホテル検索結果</h2>\r\n          <HotelsTable />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nSearchPage.propTypes = {\r\n  history: PropTypes.shape({ push: PropTypes.func }).isRequired,\r\n  location: PropTypes.shape({ search: PropTypes.string }).isRequired,\r\n  geocodeResult: PropTypes.shape({\r\n    address: PropTypes.string.isRequired,\r\n    location: PropTypes.shape({\r\n      lat: PropTypes.number.isRequired,\r\n      lng: PropTypes.number.isRequired\r\n    }).isRequired\r\n  }).isRequired,\r\n  dispatch: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  geocodeResult: state.geocodeResult\r\n});\r\n\r\nexport default connect(mapStateToProps)(SearchPage);\r\n","import React from \"react\";\r\n\r\nconst AboutPage = () => (\r\n  <div className=\"about\">\r\n    <h1 className=\"App-title\">このサイトについて</h1>\r\n  </div>\r\n);\r\n\r\nexport default AboutPage;\r\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport Header from \"./Header\";\nimport SearchPage from \"./SearchPage\";\nimport AboutPage from \"./About\";\n\nconst App = () => (\n  <Router>\n    <div className=\"App\">\n      <Header />\n      <Switch>\n        <Route exact path=\"/search-hotels\" component={SearchPage} />\n        <Route exact path=\"/search-hotels/about\" component={AboutPage} />\n      </Switch>\n    </div>\n  </Router>\n);\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\nimport App from \"./components/App\";\nimport reducer from \"./reducers/\";\n\nimport * as serviceWorker from \"./utils/serviceWorker\";\n\nconst store = createStore(reducer, composeWithDevTools(applyMiddleware(thunk)));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\nserviceWorker.unregister();\n"],"sourceRoot":""}